import r from"node:module";import{s as p,i as x,f as j,a as b,t as h,b as v,r as F,c as O,d as S,l as M}from"./resolve-ts-path-DUkQ8uuR.mjs";import P from"node:fs";import{p as R,t as g,a as A}from"./index-CKNv86dv.mjs";import{p as _}from"./client-Cg7nS93t.mjs";import u from"node:path";import{fileURLToPath as W}from"node:url";import{parse as w}from"node:querystring";const D=s=>{if(!s.includes("import")&&!s.includes("export"))return!1;try{return R(s)[3]}catch{return!0}},I=[".cts",".mts",".ts",".tsx",".jsx"],N=[".js",".cjs",".mjs"],l=Object.assign(Object.create(null),r._extensions),U=l[".js"],y=(s,e)=>{_?.send&&_.send({type:"dependency",path:e});const n=I.some(t=>e.endsWith(t)),a=N.some(t=>e.endsWith(t));if(!n&&!a)return U(s,e);let o=P.readFileSync(e,"utf8");if(e.endsWith(".cjs")){const t=g(e,o);t&&(o=p()?x(t):t.code)}else if(n||D(o)){const t=A(o,e,{tsconfigRaw:j?.(e)});o=p()?x(t):t.code}s._compile(o,e)};[".js",".ts",".tsx",".jsx"].forEach(s=>{l[s]=y}),Object.defineProperty(l,".mjs",{value:y,enumerable:!1});const L=`${u.sep}node_modules${u.sep}`,m=r._resolveFilename.bind(r),E=(s,e,n,a)=>{const o=F(s);if(e?.filename&&(O.test(e.filename)||S)&&o)for(const t of o)try{return m(t,e,n,a)}catch(c){const{code:i}=c;if(i!=="MODULE_NOT_FOUND"&&i!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}},T=(s,e,n,a)=>{if(s.startsWith("data:")){const c=s.indexOf("?");if(c===-1)return s;const i=s.slice(c+1),f=w(i);if(f["tsx-file"]){const d=f["tsx-file"];r._cache[d]=r._cache[s],delete r._cache[s],s=d}}const o=s.indexOf("?");if(o!==-1&&(s=s.slice(0,o)),s.startsWith(b)&&(s=W(s)),h&&!v(s)&&!e?.filename?.includes(L)){const c=h(s);for(const i of c){const f=E(i,e,n,a);if(f)return f;try{return m(i,e,n,a)}catch{}}}const t=E(s,e,n,a);return t||m(s,e,n,a)},C=()=>{const{sourceMapsEnabled:s}=process,{_extensions:e,_resolveFilename:n}=r;return M(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0),r._extensions=l,r._resolveFilename=T,()=>{s===!1&&process.setSourceMapsEnabled(!1),r._extensions=e,r._resolveFilename=n}};export{T as a,C as r};
