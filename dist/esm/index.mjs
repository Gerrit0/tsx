import{isMainThread as F}from"node:worker_threads";import{i as _,a as J,m as M}from"../node-features-Dcn4STxq.mjs";import{r as D}from"../register-DGMXNqQF.mjs";import{fileURLToPath as T,pathToFileURL as A}from"node:url";import{b as I,t as b}from"../index-BUWCPB1Z.mjs";import{i as E,a as v,r as $}from"../is-relative-path-pattern-DuKsZATx.mjs";import{p as k}from"../client-Cg7nS93t.mjs";import u from"node:path";import{parseTsconfig as L,getTsconfig as C,createFilesMatcher as W,createPathsMatcher as G}from"get-tsconfig";import O from"node:fs";import"node:module";import"esbuild";import"node:crypto";import"node:os";import"../temporary-directory-CwHp0_NW.mjs";import"node:net";import"../get-pipe-path-CmcG6VNd.mjs";const i={active:!0},H=async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);i.namespace=t.namespace,t.port&&(i.port=t.port,t.port.on("message",s=>{s==="deactivate"&&(i.active=!1,t.port.postMessage({type:"deactivated"}))}))},X=()=>"process.setSourceMapsEnabled(true);",d=new Map,q=async t=>{if(d.has(t))return d.get(t);if(!await O.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const e=await O.promises.readFile(t,"utf8");try{const r=JSON.parse(e);return d.set(t,r),r}catch{throw new Error(`Error parsing: ${t}`)}},Q=async t=>{let s=new URL("package.json",t);for(;!s.pathname.endsWith("/node_modules/package.json");){const e=T(s),r=await q(e);if(r)return r;const o=s;if(s=new URL("../package.json",s),s.pathname===o.pathname)break}},K=async t=>(await Q(t))?.type??"commonjs",p=process.env.TSX_TSCONFIG_PATH?{path:u.resolve(process.env.TSX_TSCONFIG_PATH),config:L(process.env.TSX_TSCONFIG_PATH)}:C(),z=p&&W(p),R=p&&G(p),B=p?.config.compilerOptions?.allowJs??!1,N="file://",h=/\.([cm]?ts|[tj]sx)($|\?)/,x=/\.json(?:$|\?)/,V=t=>{const s=u.extname(t);if(s===".json")return"json";if(s===".mjs"||s===".mts")return"module";if(s===".cjs"||s===".cts")return"commonjs"},Y=t=>{const s=V(t);if(s)return s;if(h.test(t))return K(t)},g="tsx-namespace=",l=t=>{const s=t.indexOf(g);if(s===-1)return;const e=t[s-1];if(e!=="?"&&e!=="&")return;const r=s+g.length,o=t.indexOf("&",r);return o===-1?t.slice(r):t.slice(r,o)},y=_(J)?"importAttributes":"importAssertions",Z=async(t,s,e)=>{if(!i.active||i.namespace&&i.namespace!==l(t))return e(t,s);if(i.port){const a=new URL(t);a.searchParams.delete("tsx-namespace"),i.port.postMessage({type:"load",url:a.toString()})}k.send&&k.send({type:"dependency",path:t}),x.test(t)&&(s[y]||(s[y]={}),s[y].type="json");const r=await e(t,s);if(!r.source)return r;const o=t.startsWith("file://")?T(t):t,m=r.source.toString();if(r.format==="json"||h.test(t)){const a=await I(m,o,{tsconfigRaw:z?.(o)});return{format:"module",source:E(a)}}if(r.format==="module"){const a=b(o,m);a&&(r.source=E(a))}return r},U=/\/(?:$|\?)/,w=async(t,s,e)=>{const r=await t(s,e);return!r.format&&r.url.startsWith(N)&&(r.format=await Y(r.url)),r},tt=[".js",".json",".ts",".tsx",".jsx"],P=async(t,s,e)=>{const[r,o]=t.split("?");let m;for(const a of tt)try{return await w(e,r+a+(o?`?${o}`:""),s)}catch(n){if(m===void 0&&n instanceof Error){const{message:c}=n;n.message=n.message.replace(`${a}'`,"'"),n.stack=n.stack.replace(c,n.message),m=n}}throw m},j=async(t,s,e)=>{const r=U.test(t),o=r?"index":"/index",[m,a]=t.split("?");try{return await P(m+o+(a?`?${a}`:""),s,e)}catch(n){if(!r)try{return await P(t,s,e)}catch{}const c=n,{message:f}=c;throw c.message=c.message.replace(`${o.replace("/",u.sep)}'`,"'"),c.stack=c.stack.replace(f,c.message),c}},S=async(t,s,e,r)=>{if(!i.active)return e(t,s);let o=l(t);if(s.parentURL){const a=l(s.parentURL);a&&!o&&(o=a,t+=`${t.includes("?")?"&":"?"}${g}${a}`)}if(i.namespace&&i.namespace!==o)return e(t,s);if(U.test(t))return await j(t,s,e);const m=t.startsWith(N)||v.test(t);if(R&&!m&&!s.parentURL?.includes("/node_modules/")){const a=R(t);for(const n of a)try{return await S(A(n).toString(),s,e)}catch{}}if(h.test(s.parentURL)||B){const a=$(t);if(a)for(const n of a)try{return await w(e,n,s)}catch(c){const{code:f}=c;if(f!=="ERR_MODULE_NOT_FOUND"&&f!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}}try{return await w(e,t,s)}catch(a){if(a instanceof Error&&!r){const{code:n}=a;if(n==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await j(t,s,e)}catch(c){if(c.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw c}if(n==="ERR_MODULE_NOT_FOUND")try{return await P(t,s,e)}catch{}}throw a}};_(M)&&F&&D();export{X as globalPreload,H as initialize,Z as load,S as resolve};
