import o from"node:path";import{parseTsconfig as p,getTsconfig as h,createFilesMatcher as m,createPathsMatcher as x}from"get-tsconfig";const u=`
//# sourceMappingURL=data:application/json;base64,`,g=()=>process.sourceMapsEnabled??!0,P=({code:s,map:e})=>s+u+Buffer.from(JSON.stringify(e),"utf8").toString("base64"),t=process.env.TSX_TSCONFIG_PATH?{path:o.resolve(process.env.TSX_TSCONFIG_PATH),config:p(process.env.TSX_TSCONFIG_PATH)}:h();console.log({file:typeof __filename>"u"?import.meta.url:__filename,tsconfig:t});const j=t&&m(t),S=t&&x(t),T=t?.config.compilerOptions?.allowJs??!1,_=s=>{const e=s.indexOf(":");if(e!==-1)return s.slice(0,e)},r=s=>s[0]==="."&&(s[1]==="/"||s[1]==="."||s[2]==="/"),d=s=>r(s)||o.isAbsolute(s),M=s=>{if(d(s))return!0;const e=_(s);return e&&e!=="node"},b="file://",O=/\.([cm]?ts|[tj]sx)($|\?)/,v=/\.json($|\?)/,A=/\/(?:$|\?)/,n=Object.create(null);n[".js"]=[".ts",".tsx",".js",".jsx"],n[".jsx"]=[".tsx",".ts",".jsx",".js"],n[".cjs"]=[".cts"],n[".mjs"]=[".mts"];const y=s=>{const[e,c]=s.split("?"),a=o.extname(e),i=n[a];if(i){const l=e.slice(0,-a.length);return i.map(f=>l+f+(c?`?${c}`:""))}};export{b as a,r as b,O as c,T as d,v as e,j as f,M as g,A as h,P as i,y as r,g as s,S as t};
