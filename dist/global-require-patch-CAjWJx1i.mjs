import a from"node:module";import{s as p,i as d,f as j,a as T,t as u,b,r as v,c as F,d as S,l as M}from"./resolve-ts-path-DUkQ8uuR.mjs";import O from"node:fs";import{fileURLToPath as P}from"node:url";import"esbuild";import"node:crypto";import{p as R,t as g,a as A}from"./index-RfA_mbGQ.mjs";import{p as x}from"./client-Cg7nS93t.mjs";import _ from"node:path";import"get-tsconfig";const D=s=>{if(!s.includes("import")&&!s.includes("export"))return!1;try{return R(s)[3]}catch{return!0}},N=(s,e,o)=>{if(s.endsWith(".cjs")){const t=g(s,e);if(t)return p()?d(t):t.code}else if(o||D(e)){const t=A(e,s,{tsconfigRaw:j?.(s)});return p()?d(t):t.code}return e},U=[".cts",".mts",".ts",".tsx",".jsx"],W=[".js",".cjs",".mjs"],l=Object.assign(Object.create(null),a._extensions),w=l[".js"],h=(s,e)=>{x?.send&&x.send({type:"dependency",path:e});const o=U.some(n=>e.endsWith(n)),t=W.some(n=>e.endsWith(n));if(!o&&!t)return w(s,e);let r=O.readFileSync(e,"utf8");r=N(e,r,o),s._compile(r,e)};[".js",".ts",".tsx",".jsx"].forEach(s=>{l[s]=h}),Object.defineProperty(l,".mjs",{value:h,enumerable:!1});const C=`${_.sep}node_modules${_.sep}`,m=a._resolveFilename.bind(a),y=(s,e,o,t)=>{const r=v(s);if(e?.filename&&(F.test(e.filename)||S)&&r)for(const n of r)try{return m(n,e,o,t)}catch(i){const{code:c}=i;if(c!=="MODULE_NOT_FOUND"&&c!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}},E=(s,e,o,t)=>{const r=s.indexOf("?");if(r!==-1&&(s=s.slice(0,r)),s.startsWith(T)&&(s=P(s)),u&&!b(s)&&!e?.filename?.includes(C)){const i=u(s);for(const c of i){const f=y(c,e,o,t);if(f)return f;try{return m(c,e,o,t)}catch{}}}const n=y(s,e,o,t);return n||m(s,e,o,t)},I=()=>{const{sourceMapsEnabled:s}=process,{_extensions:e,_resolveFilename:o}=a;return M(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0),a._extensions=l,a._resolveFilename=E,()=>{s===!1&&process.setSourceMapsEnabled(!1),a._extensions=e,a._resolveFilename=o}};export{E as a,I as r};
