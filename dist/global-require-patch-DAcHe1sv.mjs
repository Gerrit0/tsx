import a from"node:module";import{s as d,i as p,f as T,a as j,t as u,b,r as v,c as F,d as S,l as M}from"./resolve-ts-path-DUkQ8uuR.mjs";import O from"node:fs";import{p as g,t as R,a as P}from"./index-DiuW-CAd.mjs";import{p as x}from"./client-Cg7nS93t.mjs";import _ from"node:path";import{fileURLToPath as A}from"node:url";const D=s=>{if(!s.includes("import")&&!s.includes("export"))return!1;try{return g(s)[3]}catch{return!0}},N=[".cts",".mts",".ts",".tsx",".jsx"],U=[".js",".cjs",".mjs"],l=Object.assign(Object.create(null),a._extensions),W=l[".js"],h=(s,e)=>{x?.send&&x.send({type:"dependency",path:e});const n=N.some(o=>e.endsWith(o)),r=U.some(o=>e.endsWith(o));if(!n&&!r)return W(s,e);let t=O.readFileSync(e,"utf8");if(e.endsWith(".cjs")){const o=R(e,t);o&&(t=d()?p(o):o.code)}else if(n||D(t)){const o=P(t,e,{tsconfigRaw:T?.(e)});t=d()?p(o):o.code}s._compile(t,e)};[".js",".ts",".tsx",".jsx"].forEach(s=>{l[s]=h}),Object.defineProperty(l,".mjs",{value:h,enumerable:!1});const w=`${_.sep}node_modules${_.sep}`,f=a._resolveFilename.bind(a),y=(s,e,n,r)=>{const t=v(s);if(e?.filename&&(F.test(e.filename)||S)&&t)for(const o of t)try{return f(o,e,n,r)}catch(i){const{code:c}=i;if(c!=="MODULE_NOT_FOUND"&&c!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}},E=(s,e,n,r)=>{const t=s.indexOf("?");if(t!==-1&&(s=s.slice(0,t)),s.startsWith(j)&&(s=A(s)),u&&!b(s)&&!e?.filename?.includes(w)){const i=u(s);for(const c of i){const m=y(c,e,n,r);if(m)return m;try{return f(c,e,n,r)}catch{}}}const o=y(s,e,n,r);return o||f(s,e,n,r)},C=s=>{const{sourceMapsEnabled:e}=process,{_extensions:n,_resolveFilename:r}=a;M(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0),a._extensions=l,a._resolveFilename=E;const t=()=>{e===!1&&process.setSourceMapsEnabled(!1),a._extensions=n,a._resolveFilename=r};if(s?.namespace){const o=(i,c)=>{getRequestContext(i,c)};t.require=o,t.unregister=t}return t};export{E as a,C as r};
