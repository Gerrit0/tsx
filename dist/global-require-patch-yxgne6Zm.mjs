import c from"node:module";import F from"node:fs";import{createFilesMatcher as M,createPathsMatcher as b}from"get-tsconfig";import{p as v,t as O,a as T}from"./index-DiuW-CAd.mjs";import{t as i,s as p,i as u,f as S,a as P,r as R}from"./file-url-D7ySh6m_.mjs";import{p as h}from"./client-Cg7nS93t.mjs";import x from"node:path";import{fileURLToPath as g}from"node:url";const A=s=>{if(s.includes("import")||s.includes("export"))try{return v(s)[3]}catch{return!0}return!1},D=[".cts",".mts",".ts",".tsx",".jsx"],U=[".js",".cjs",".mjs"],W=i&&M(i),f=Object.assign(Object.create(null),c._extensions),w=f[".js"],_=(s,e)=>{h?.send&&h.send({type:"dependency",path:e});const n=D.some(t=>e.endsWith(t)),r=U.some(t=>e.endsWith(t));if(!n&&!r)return w(s,e);let o=F.readFileSync(e,"utf8");if(e.endsWith(".cjs")){const t=O(e,o);t&&(o=p()?u(t):t.code)}else if(n||A(o)){const t=T(o,e,{tsconfigRaw:W?.(e)});o=p()?u(t):t.code}s._compile(o,e)};[".js",".ts",".tsx",".jsx"].forEach(s=>{f[s]=_}),Object.defineProperty(f,".mjs",{value:_,enumerable:!1});const L=/\.[cm]?tsx?$/,N=`${x.sep}node_modules${x.sep}`,y=i&&b(i),m=c._resolveFilename.bind(c),E=(s,e,n,r)=>{const o=R(s);if(e?.filename&&(L.test(e.filename)||i?.config.compilerOptions?.allowJs)&&o)for(const t of o)try{return m(t,e,n,r)}catch(l){const{code:a}=l;if(a!=="MODULE_NOT_FOUND"&&a!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw l}},j=(s,e,n,r)=>{const o=s.indexOf("?");if(o!==-1&&(s=s.slice(0,o)),s.startsWith(S)&&(s=g(s)),y&&!P(s)&&!e?.filename?.includes(N)){const l=y(s);for(const a of l){const d=E(a,e,n,r);if(d)return d;try{return m(a,e,n,r)}catch{}}}const t=E(s,e,n,r);return t||m(s,e,n,r)},$=()=>{const{sourceMapsEnabled:s}=process,{_extensions:e,_resolveFilename:n}=c;return process.setSourceMapsEnabled(!0),c._extensions=f,c._resolveFilename=j,()=>{s===!1&&process.setSourceMapsEnabled(!1),c._extensions=e,c._resolveFilename=n}};export{j as a,$ as r};
