import o from"node:path";import{parseTsconfig as h,getTsconfig as g,createFilesMatcher as x,createPathsMatcher as u}from"get-tsconfig";import{W as d}from"./index-CQFEY09x.mjs";console.log("self",typeof __filename>"u"?import.meta.url:__filename);let i,r,l=!1;const j=d("--no-warnings",Boolean)||!!process.env.NODE_NO_WARNINGS,P=s=>{let e=null;if(s){const t=o.resolve(s);e={path:t,config:h(t)}}else{try{e=g()}catch(t){j||t instanceof Error&&console.warn(`(tsx:${process.pid}) [-----] TsconfigWarning:`,t.message)}if(!e)return}i=x(e),r=u(e),l=e?.config.compilerOptions?.allowJs??!1},M=`
//# sourceMappingURL=data:application/json;base64,`,b=()=>process.sourceMapsEnabled??!0,S=({code:s,map:e})=>s+M+Buffer.from(JSON.stringify(e),"utf8").toString("base64"),y=s=>{const e=s.indexOf(":");if(e!==-1)return s.slice(0,e)},f=s=>s[0]==="."&&(s[1]==="/"||s[1]==="."||s[2]==="/"),E=s=>f(s)||o.isAbsolute(s),O=s=>{if(E(s))return!0;const e=y(s);return e&&e!=="node"},_="file://",v=/\.([cm]?ts|[tj]sx)($|\?)/,N=/\.json($|\?)/,T=/\/(?:$|\?)/,n=Object.create(null);n[".js"]=[".ts",".tsx",".js",".jsx"],n[".jsx"]=[".tsx",".ts",".jsx",".js"],n[".cjs"]=[".cts"],n[".mjs"]=[".mts"];const $=s=>{const[e,t]=s.split("?"),a=o.extname(e),c=n[a];if(c){const p=e.slice(0,-a.length);return c.map(m=>p+m+(t?`?${t}`:""))}};export{_ as a,f as b,v as c,l as d,N as e,i as f,O as g,T as h,S as i,P as l,$ as r,b as s,r as t};
