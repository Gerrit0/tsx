import a from"node:module";import{s as d,i as p,f as T,a as j,t as u,b as v,r as F,c as b,d as S,l as O}from"./resolve-ts-path-DUkQ8uuR.mjs";import M from"node:fs";import{p as P,t as R,a as g}from"./index-CKNv86dv.mjs";import{p as x}from"./client-Cg7nS93t.mjs";import _ from"node:path";import{fileURLToPath as A}from"node:url";const W=s=>{if(!s.includes("import")&&!s.includes("export"))return!1;try{return P(s)[3]}catch{return!0}},D=[".cts",".mts",".ts",".tsx",".jsx"],N=[".js",".cjs",".mjs"],l=Object.assign(Object.create(null),a._extensions),U=l[".js"],h=(s,e)=>{x?.send&&x.send({type:"dependency",path:e});const t=D.some(o=>e.endsWith(o)),r=N.some(o=>e.endsWith(o));if(!t&&!r)return U(s,e);let n=M.readFileSync(e,"utf8");if(e.endsWith(".cjs")){const o=R(e,n);o&&(n=d()?p(o):o.code)}else if(t||W(n)){const o=g(n,e,{tsconfigRaw:T?.(e)});n=d()?p(o):o.code}s._compile(n,e)};[".js",".ts",".tsx",".jsx"].forEach(s=>{l[s]=h}),Object.defineProperty(l,".mjs",{value:h,enumerable:!1});const w=`${_.sep}node_modules${_.sep}`,f=a._resolveFilename.bind(a),y=(s,e,t,r)=>{const n=F(s);if(e?.filename&&(b.test(e.filename)||S)&&n)for(const o of n)try{return f(o,e,t,r)}catch(i){const{code:c}=i;if(c!=="MODULE_NOT_FOUND"&&c!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}},E=(s,e,t,r)=>{if(console.log("resolveFilename",s,e?.filename),s.startsWith("data:"))return f(s,e,t,r);const n=s.indexOf("?");if(n!==-1&&(s=s.slice(0,n)),s.startsWith(j)&&(s=A(s)),u&&!v(s)&&!e?.filename?.includes(w)){const i=u(s);for(const c of i){const m=y(c,e,t,r);if(m)return m;try{return f(c,e,t,r)}catch{}}}const o=y(s,e,t,r);return o||f(s,e,t,r)},I=()=>{const{sourceMapsEnabled:s}=process,{_extensions:e,_resolveFilename:t}=a;return O(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0),a._extensions=l,a._resolveFilename=E,()=>{s===!1&&process.setSourceMapsEnabled(!1),a._extensions=e,a._resolveFilename=t}};export{E as a,I as r};
