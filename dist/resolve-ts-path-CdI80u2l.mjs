import o from"node:path";import{parseTsconfig as i,getTsconfig as h,createFilesMatcher as m,createPathsMatcher as x}from"get-tsconfig";const T=`
//# sourceMappingURL=data:application/json;base64,`,P=()=>process.sourceMapsEnabled??!0,S=({code:s,map:e})=>s+T+Buffer.from(JSON.stringify(e),"utf8").toString("base64");if(process.env.TSX_TSCONFIG_PATH)try{i(process.env.TSX_TSCONFIG_PATH)}catch(s){console.error(1111,s)}const t=process.env.TSX_TSCONFIG_PATH?{path:o.resolve(process.env.TSX_TSCONFIG_PATH),config:i(process.env.TSX_TSCONFIG_PATH)}:h();console.log({file:typeof __filename>"u"?import.meta.url:__filename,tsconfig:t});const u=t&&m(t),g=t&&x(t),_=t?.config.compilerOptions?.allowJs??!1,j=s=>{const e=s.indexOf(":");if(e!==-1)return s.slice(0,e)},l=s=>s[0]==="."&&(s[1]==="/"||s[1]==="."||s[2]==="/"),d=s=>l(s)||o.isAbsolute(s),M=s=>{if(d(s))return!0;const e=j(s);return e&&e!=="node"},O="file://",v=/\.([cm]?ts|[tj]sx)($|\?)/,A=/\.json($|\?)/,b=/\/(?:$|\?)/,n=Object.create(null);n[".js"]=[".ts",".tsx",".js",".jsx"],n[".jsx"]=[".tsx",".ts",".jsx",".js"],n[".cjs"]=[".cts"],n[".mjs"]=[".mts"];const y=s=>{const[e,c]=s.split("?"),r=o.extname(e),a=n[r];if(a){const p=e.slice(0,-r.length);return a.map(f=>p+f+(c?`?${c}`:""))}};export{O as a,l as b,v as c,_ as d,A as e,u as f,M as g,b as h,S as i,y as r,P as s,g as t};
